@using Application.Common.Models
@model Application.Search.Queries.SearchHotelRooms.SearchHotelRoomsResponse
@{
    ViewData["Title"] = "Search";
}

<div class="breadcumb_area bg-img mt-100" style="background-image: url(img/core-img/breadcumb.jpg);">
    <div class="container h-100">
        <div class="row h-100 align-items-center">
            <div class="col-12">
                <div class="page-title text-center">
                    <h2>Explore Your Favorite Hotels</h2>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- ##### Shop Area ##### -->
<section class="shop_grid_area section-padding-80">
    <div class="container">
        <div class="row">
            <div class="col-12 col-md-4 col-lg-3">
                <div class="shop_sidebar_area">
                    <!-- ##### Single Widget ##### -->
                    <div class="widget catagory mb-50">
                        <!-- Widget Title -->
                        <h6 class="widget-title mb-30">Filter by:</h6>
                        <!--  Catagories  -->
                        <div class="catagories-menu">
                            <ul id="menu-content2" class="menu-content collapse show">
                                <!-- Single Item -->
                                <li data-toggle="collapse" data-target="#capacity">
                                    <a class="link">Room capacity</a>
                                    <ul class="sub-menu collapse show" id="capacity">
                                        <li><a href="@Url.Action("Search", "Home", new { term = Context.Request.Query["term"], from = Context.Request.Query["from"], to = Context.Request.Query["to"], capacity = 1, page = Context.Request.Query["page"], type = Context.Request.Query["type"], sort = Context.Request.Query["sort"] })">1 adults</a></li>
                                        <li><a href="@Url.Action("Search", "Home", new { term = Context.Request.Query["term"], from = Context.Request.Query["from"], to = Context.Request.Query["to"], capacity = 2, page = Context.Request.Query["page"], type = Context.Request.Query["type"], sort = Context.Request.Query["sort"] })">2 adults</a></li>
                                        <li><a href="@Url.Action("Search", "Home", new { term = Context.Request.Query["term"], from = Context.Request.Query["from"], to = Context.Request.Query["to"], capacity = 3, page = Context.Request.Query["page"], type = Context.Request.Query["type"], sort = Context.Request.Query["sort"] })">3 adults</a></li>
                                        <li><a href="@Url.Action("Search", "Home", new { term = Context.Request.Query["term"], from = Context.Request.Query["from"], to = Context.Request.Query["to"], capacity = 4, page = Context.Request.Query["page"], type = Context.Request.Query["type"], sort = Context.Request.Query["sort"] })">4 adults</a></li>
                                    </ul>
                                </li>
                                <!-- Single Item -->
                                <li data-toggle="collapse" data-target="#plants1" class="collapsed">
                                    <a class="link">Room type</a>
                                    <ul class="sub-menu collapse" id="plants1">
                                        @{
                                            var enums = (RoomType[])Enum.GetValues(typeof(RoomType));
                                            for (int i = 0; i < enums.Length; i++)
                                            {
                                                <li>
                                                    <a href="@Url.Action("Search", "Home", new { term = Context.Request.Query["term"], from = Context.Request.Query["from"], to = Context.Request.Query["to"], capacity = Context.Request.Query["capacity"], page = Context.Request.Query["page"], type = i, sort = Context.Request.Query["sort"] })">
                                                        @string.Join(' ', Regex.Split(enums[i].ToString(), "(?<!^)(?=[A-Z0-9])"))
                                                    </a>
                                                </li>
                                            }
                                        }
                                    </ul>
                                </li>

                            </ul>
                        </div>
                    </div>
                    <!-- ##### Single Widget ##### -->
                    <div class="widget price mb-50">
                        <!-- Widget Title -->
                        <p class="widget-title2 mb-30">Price</p>
                        <div class="widget-desc">
                            <div class="slider-range">
                                <div data-min="0" data-max="@Model.HighestPrice" data-unit="" class="slider-range-price ui-slider ui-slider-horizontal ui-widget ui-widget-content ui-corner-all" data-value-min="00" data-value-max="@Model.HighestPrice" data-label-result="@Model.CurrencyCode">
                                    <div class="ui-slider-range ui-widget-header ui-corner-all"></div>
                                    <span class="ui-slider-handle ui-state-default ui-corner-all" tabindex="0"></span>
                                    <span class="ui-slider-handle ui-state-default ui-corner-all" tabindex="0"></span>
                                </div>
                                <div class="range-price">@Model.CurrencyCode 0 - @Model.HighestPrice</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-12 col-md-8 col-lg-9">
                <div class="shop_grid_product_area">
                    <div class="row">
                        <div class="col-12">
                            <div class="product-topbar d-flex align-items-center justify-content-between">
                                <!-- Total Products -->
                                <div class="total-products">
                                    <p><span>@Model.Count</span> found properties </p>
                                </div>
                                <!-- Sorting -->
                                <div class="product-sorting d-flex">
                                    <p>Sorted by</p>
                                    <form action="#" method="get">
                                        <select name="select" id="sortByselect">
                                            @{
                                                var sorts = (SortBy[])Enum.GetValues(typeof(SortBy));
                                                var current = int.TryParse(Context.Request.Query["sort"], out var result) ? result : 0;
                                                for (int i = 0; i < sorts.Length; i++)
                                                {
                                                    var split = string.Join(' ', Regex.Split(sorts[i].ToString(), "(?<!^)(?=[A-Z0-9])"));
                                                    if (current == i)
                                                    {
                                                        <option value="@i" selected>@split</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@i">@split</option>
                                                    }
                                                }
                                            }
                                        </select>
                                        <input type="submit" class="d-none" value="">
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        @foreach (var room in Model.HotelRooms)
                        {
                            <div class="col-12 col-sm-6 col-lg-4">
                                <div class="single-product-wrapper">
                                    <!-- Product Image -->
                                    <div class="product-img">
                                        <img src="@room.Image" alt="">
                                    </div>
                                    <!-- Product Description -->
                                    <div class="product-description">
                                        <a asp-action="Details" asp-route-id="@room.Id">
                                            <h6>@room.Name</h6>
                                        </a>
                                        <p class="product-price">@Math.Round(room.Price, 2) @Model.CurrencyCode</p>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <!-- Navigation -->
                <nav aria-label="navigation">
                    <ul class="pagination mt-50 mb-70">
                        @{
                            var currentPage = int.TryParse(Context.Request.Query["term"], out var count) ? count : 0;
                            <li class="page-item"><a class="page-link" href="@Url.Action("Search", "Home", new { term = Context.Request.Query["term"], from = Context.Request.Query["from"], to = Context.Request.Query["to"], capacity = Context.Request.Query["capacity"], page = currentPage > 0 ? currentPage - 1 : 0, type = Context.Request.Query["type"], sort = Context.Request.Query["sort"] })"><i class="fa fa-angle-left"></i></a></li>
                            if (currentPage > 0)
                            {
                                currentPage -= currentPage > 2 ? 2 : currentPage;
                                <li class="page-item"><a class="page-link" href="@Url.Action("Search", "Home", new { term = Context.Request.Query["term"], from = Context.Request.Query["from"], to = Context.Request.Query["to"], capacity = Context.Request.Query["capacity"], page = 0, type = Context.Request.Query["type"], sort = Context.Request.Query["sort"] })">1</a></li>
                                <li class="page-item"><a class="page-link">...</a></li>
                            }
                            var length = currentPage > 0 ? currentPage + 3 : 1;
                            for (int i = currentPage; i < length; i++)
                            {

                                <li class="page-item"><a class="page-link" href="@Url.Action("Search", "Home", new { term = Context.Request.Query["term"], from = Context.Request.Query["from"], to = Context.Request.Query["to"], capacity = Context.Request.Query["capacity"], page = i, type = Context.Request.Query["type"], sort = Context.Request.Query["sort"] })">@(i + 1)</a></li>
                            }
                            if (currentPage < Model.Count - 2)
                            {
                                <li class="page-item"><a class="page-link">...</a></li>
                                <li class="page-item"><a class="page-link" href="@Url.Action("Search", "Home", new { term = Context.Request.Query["term"], from = Context.Request.Query["from"], to = Context.Request.Query["to"], capacity = Context.Request.Query["capacity"], page = Model.Count / 20 - 1, type = Context.Request.Query["type"], sort = Context.Request.Query["sort"] })">@Model.Count</a></li>
                            }
                            <li class="page-item"><a class="page-link" href="@Url.Action("Search", "Home", new { term = Context.Request.Query["term"], from = Context.Request.Query["from"], to = Context.Request.Query["to"], capacity = Context.Request.Query["capacity"], page = Model.Count / 20 > 0 ? Model.Count : 0, type = Context.Request.Query["type"], sort = Context.Request.Query["sort"] })"><i class="fa fa-angle-right"></i></a></li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</section>
@section Styles {
    <link rel="stylesheet" type="text/css" href="css/util.css">
    <link rel="stylesheet" type="text/css" href="css/main-contacts.css" />
           <link href="node_modules\jquery-ui\themes\base\slider.css" rel="stylesheet" />
}

@section Scripts {
    <script src="js/jquery-ui.min.js"></script>
    <script>
        (() => {
            $('#sortByselect').on('change', (event) => {
                document.location.href = document.location.origin + @Url.Action("Search", "Home", new { term = Context.Request.Query["term"], from = Context.Request.Query["from"], to = Context.Request.Query["to"], capacity = Context.Request.Query["capacity"], page = Context.Request.Query["page"], type = Context.Request.Query["type"] }) + '&sort=' + event.target.nodeValue;
            });
        })();
    </script>
}