@model Application.Admin.Commands.CreateEmployee.CreateEmployeeCommand
@{
    ViewData["Title"] = "Create";
}

<div class="breadcumb_area bg-img" style="background-image: url(img/core-img/breadcumb.jpg);margin-top:90px; ">
    <div class="container h-100">
        <div class="row h-100 align-items-center">
            <div class="col-12">
                <div class="page-title text-center">
                    <h2>Create</h2>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container-contact100">
    <div class="wrap-contact100">
        <form asp-action="Create" class="contact100-form validate-form">
            <span class="contact100-form-title">
                Create a new employee
            </span>

            <label asp-for="MiddleName" class="label-input100">Middle name</label>
            <div class="wrap-input100">
                <input asp-for="MiddleName" class="input100">
                <span asp-validation-for="MiddleName" class="text-danger"></span>
            </div>

            <label asp-for="EGN" class="label-input100">EGN</label>
            <div class="wrap-input100">
                <input asp-for="EGN" class="input100">
                <span asp-validation-for="EGN" class="text-danger"></span>
            </div>

            <label asp-for="UserId" class="label-input100">User<i id="userInfo" tabindex="0" class="fa fa-exclamation-circle ml-1"></i></label>
            <div class="wrap-input100">
                <input id="userId" list="list-of-users" class="input100" asp-for="UserId" autocomplete="off" />
                <span asp-validation-for="UserId" class="text-danger"></span>

                <datalist id="list-of-users">
                </datalist>
            </div>

            <div class="container-contact100-form-btn">
                <button class="contact100-form-btn">
                    Create
                </button>
            </div>
        </form>

        <div class="contact101-more flex-col-c-m" style="background-image: url(img/HomePage/employee.jpg);">
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        (() => {
            const userId = $('#userId');
            let cansearch = true;
            userId.on('input', () => {
                if (cansearch) {
                    cansearch = false;
                    search();

                    const value = userId.val().trim();
                    setTimeout(() => {
                        if (value != userId.val().trim()) {
                            search();
                        }
                        else {
                            cansearch = true;
                        }
                    }, 3 * 1000);
                }
            });

            async function search() {
                const value = userId.val().trim();
                if (value == '')
                    return;

                await fetch('api/user/' + value)
                    .then((resp) => resp.json())
                    .then(function (data) {
                        const list = $('#list-of-users');
                        list.html('');
                        for (const user of data) {
                            const option = $('<option></option>');
                            option.html(user.fullName + ' ' + user.email);
                            option.attr('value', user.id);
                            list.append(option);
                        }
                    });
            }

            $('#userInfo').popover({
                trigger: 'focus',
                content: 'Type the name of the user and select him to get his ID'
            });
        })();
    </script>
}

@section Styles {
    <link rel="stylesheet" type="text/css" href="css/util.css">
    <link rel="stylesheet" type="text/css" href="css/main-contacts.css">
}